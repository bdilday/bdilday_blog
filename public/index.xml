<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphswithcodeanddata</title>
    <link>/</link>
    <description>Recent content on graphswithcodeanddata</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Storytelling With Data (SWD) Challenge: Your Choice Makover</title>
      <link>/2018/07/07/storytelling-with-data-swd-challenge-your-choice-makover/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/07/storytelling-with-data-swd-challenge-your-choice-makover/</guid>
      <description>Introduction: SWDChallenge On her blog and Twitter account, Storytelling With Data, Cole Nussbaumer Knaflic is running a monthly challenge on effective data visualization. Previous challenges have mainly focused on using specific graph types (e.g., square area, bar charts, slopegraphs) or elements (annotation, color). This month the challenge is to remake a less-than-ideal graph. I happen to have one in mind, so I&amp;rsquo;m jumping in to the challenge!
The less-than-ideal graph The graph I&amp;rsquo;m going to remake comes from the Kansas City, MO, citizen satisfaction survey for 2012-2013.</description>
    </item>
    
    <item>
      <title>Closeness Index - One-run games&#43;&#43;</title>
      <link>/2018/06/17/closeness-index-one-run-games/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/17/closeness-index-one-run-games/</guid>
      <description>Introduction The last post looked at records in one-run games. It turns out that Baseball Musings offered a alternative way of thinking about it some 8 years ago. The overarching idea here is that one-run games are kind of a proxy for tight games - but there&amp;rsquo;s a difference between a game that&amp;rsquo;s not close, and then the bullpen blows a lead and it ends up at 1-run, versus a game that&amp;rsquo;s close the whole way.</description>
    </item>
    
    <item>
      <title>Record in One-run Games</title>
      <link>/2018/06/15/record-in-one-run-games/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/15/record-in-one-run-games/</guid>
      <description>So far this season the Seattle Mariners have won a historically high number of one-run games. As of this writing they are 21 - 9, and 1/2 game up on the Astros despite having a run-differential of about 100 runs less. This post looks at records in one-run games over the years.
Libraries library(RPostgres) library(DBI) library(dplyr) library(ggplot2) library(magrittr) # for the in-place assignment, %&amp;lt;&amp;gt;% library(ggrepel)  Data I&amp;rsquo;m using the game data from retrosheet.</description>
    </item>
    
    <item>
      <title>Home Runs in 1000 PA</title>
      <link>/2018/05/27/home-runs-in-1000-pa/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/27/home-runs-in-1000-pa/</guid>
      <description>I recently saw a headline saying Aaron Judge now has the record for quickest to 70 home runs from start of a career. This stat is impressive, but also skewed because Judge started in the majors at age 24, which is fairly late for a superstar. A related question that&amp;rsquo;s interesting to ask is, which players had streaks of 1000 PA or so with 70 HR at the youngest ages?</description>
    </item>
    
    <item>
      <title>Graphical MLB Standings</title>
      <link>/2018/05/25/graphical-mlb-standings/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/25/graphical-mlb-standings/</guid>
      <description>This post extends the previous one on runs-scored and runs-allowed contours to show a prototype for a graphical standings table. When I look at a standings table what I want to see is
 wins and losses
 winning percentage - how many wins does this prorate to at 162 G?
 runs scored and allowed
 are they beating their Pythagorean record? lagging it?
 are they defense first or offense first?</description>
    </item>
    
    <item>
      <title>RS and RA contours with ggplot</title>
      <link>/2018/05/12/rs-and-ra-contours-with-ggplot/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/12/rs-and-ra-contours-with-ggplot/</guid>
      <description>This post shows how to scrape the current MLB standings and generate a graph of runs scored and runs allowed contours. I will facet the graph according to division, but still compute the contours using all the data. The trick for making this work is to replicate the data, setting a flag for each division, and then using alpha and size aesthetics to hide the non-relevant data.
Scraping current standings For scraping current standings there are a variety of choices, e.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>This blog is created by Ben Dilday. I&amp;rsquo;m a data scientist in the New York area. Previously I&amp;rsquo;ve been a software engineer (focusing on augmented reality applications), an instructor of physics and astronomy, an astrophysicist (studying supernovas and dark energy), and a grad student in Physics (at the University of Chicago).
I created this blog because I realized that the number one thing I&amp;rsquo;m hoping to find when I venture on to the internet is some cool graphs!</description>
    </item>
    
    <item>
      <title></title>
      <link>/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/01/</guid>
      <description>RS and RA contours with ggplot       code{white-space: pre;} pre:not([class]) { background-color: white; }  if (window.hljs) { hljs.configure({languages: []}); hljs.initHighlightingOnLoad(); if (document.readyState &amp;&amp; document.readyState === &#34;complete&#34;) { window.setTimeout(function() { hljs.initHighlighting(); }, 0); } }  h1 { font-size: 34px; } h1.title { font-size: 38px; } h2 { font-size: 30px; } h3 { font-size: 24px; } h4 { font-size: 18px; } h5 { font-size: 16px; } h6 { font-size: 12px; } .</description>
    </item>
    
  </channel>
</rss>